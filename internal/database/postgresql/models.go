// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.0

package postgresql

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"

	"github.com/google/uuid"
)

type ReminderStatus string

const (
	ReminderStatusCreated ReminderStatus = "created"
	ReminderStatusDoing   ReminderStatus = "doing"
	ReminderStatusDone    ReminderStatus = "done"
)

func (e *ReminderStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = ReminderStatus(s)
	case string:
		*e = ReminderStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for ReminderStatus: %T", src)
	}
	return nil
}

type NullReminderStatus struct {
	ReminderStatus ReminderStatus
	Valid          bool // Valid is true if ReminderStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullReminderStatus) Scan(value interface{}) error {
	if value == nil {
		ns.ReminderStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.ReminderStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullReminderStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.ReminderStatus), nil
}

type Reminder struct {
	ID          uuid.UUID
	Title       string
	Description sql.NullString
	Status      ReminderStatus
	Created     time.Time
}
